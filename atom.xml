<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>snowFlakeXue</title>
  <icon>https://www.gravatar.com/avatar/4543c26cc38d80588b9c8a253b44cc58</icon>
  <subtitle>Work hard for what you desire.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="snowFlakeXue.github.io/"/>
  <updated>2019-05-19T13:10:39.006Z</updated>
  <id>snowFlakeXue.github.io/</id>
  
  <author>
    <name>Liu Xue</name>
    <email>liuxue82@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="snowFlakeXue.github.io/2019/05/19/1/"/>
    <id>snowFlakeXue.github.io/2019/05/19/1/</id>
    <published>2019-05-19T12:55:26.318Z</published>
    <updated>2019-05-19T13:10:39.006Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>生命周期</title>
    <link href="snowFlakeXue.github.io/2019/05/19/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>snowFlakeXue.github.io/2019/05/19/生命周期/</id>
    <published>2019-05-19T12:43:24.000Z</published>
    <updated>2019-05-19T13:13:55.025Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;生命周期又叫钩子函数，就是在某个节点进行某个操作，这里讲的是构造器里的生命周期，总共有十个，有两个需结合组件学习-activated-deactivated-，所以先学八个&quot;&gt;&lt;a href=&quot;#生命周期又叫钩子函数，就是在某个节点进行某个操作，这里讲的是构造器里的生命周期，总共有十个，有两个需结合组件学习-activated-deactivated-，所以先学八个&quot; class=&quot;headerlink&quot; title=&quot;生命周期又叫钩子函数，就是在某个节点进行某个操作，这里讲的是构造器里的生命周期，总共有十个，有两个需结合组件学习(activated,deactivated)，所以先学八个&quot;&gt;&lt;/a&gt;生命周期又叫钩子函数，就是在某个节点进行某个操作，这里讲的是构造器里的生命周期，总共有十个，有两个需结合组件学习(activated,deactivated)，所以先学八个&lt;/h3&gt;
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue.set</title>
    <link href="snowFlakeXue.github.io/2019/05/18/Vue-set/"/>
    <id>snowFlakeXue.github.io/2019/05/18/Vue-set/</id>
    <published>2019-05-18T00:10:58.000Z</published>
    <updated>2019-05-18T01:34:48.335Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;先举个调用构造器外数据的小栗子&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>day4</title>
    <link href="snowFlakeXue.github.io/2019/05/17/day4/"/>
    <id>snowFlakeXue.github.io/2019/05/17/day4/</id>
    <published>2019-05-17T14:38:44.000Z</published>
    <updated>2019-05-17T14:53:39.835Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ol&gt;
&lt;li&gt;将二进制转换为小数，同样是各位乘以位权&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/2019/05/17/day4/1.jpg&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt;
&lt;ol
        
      
    
    </summary>
    
      <category term="睡前小读" scheme="snowFlakeXue.github.io/categories/%E7%9D%A1%E5%89%8D%E5%B0%8F%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue.extend</title>
    <link href="snowFlakeXue.github.io/2019/05/17/Vue-extend/"/>
    <id>snowFlakeXue.github.io/2019/05/17/Vue-extend/</id>
    <published>2019-05-17T02:49:20.000Z</published>
    <updated>2019-05-17T03:05:29.746Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;因为还没学组件所以下面的将是一个简单的扩展实例构造器的小栗子，一般情况下扩展实例构造器是要和组件一起使用的&quot;&gt;&lt;a href=&quot;#因为还没学组件所以下面的将是一个简单的扩展实例构造器的小栗子，一般情况下扩展实例构造器是要和组件一起使用的&quot;
        
      
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>自定义指令</title>
    <link href="snowFlakeXue.github.io/2019/05/16/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/"/>
    <id>snowFlakeXue.github.io/2019/05/16/自定义指令/</id>
    <published>2019-05-16T12:00:49.000Z</published>
    <updated>2019-05-16T15:16:27.253Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;先举个小栗子&quot;&gt;&lt;a href=&quot;#先举个小栗子&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>其他指令</title>
    <link href="snowFlakeXue.github.io/2019/05/16/%E5%85%B6%E4%BB%96%E6%8C%87%E4%BB%A4/"/>
    <id>snowFlakeXue.github.io/2019/05/16/其他指令/</id>
    <published>2019-05-16T08:26:07.000Z</published>
    <updated>2019-05-16T10:34:41.356Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;v-pre v-cloak v-once&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>vbind</title>
    <link href="snowFlakeXue.github.io/2019/05/16/vbind/"/>
    <id>snowFlakeXue.github.io/2019/05/16/vbind/</id>
    <published>2019-05-16T07:44:39.000Z</published>
    <updated>2019-05-16T10:32:37.665Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;v-bind用于绑定属性，样式，很重要&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>vmodel</title>
    <link href="snowFlakeXue.github.io/2019/05/16/vmodel/"/>
    <id>snowFlakeXue.github.io/2019/05/16/vmodel/</id>
    <published>2019-05-16T03:07:15.000Z</published>
    <updated>2019-05-16T10:33:32.944Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;v-model是实现双向绑定的方法，是vue的核心&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>von</title>
    <link href="snowFlakeXue.github.io/2019/05/16/von/"/>
    <id>snowFlakeXue.github.io/2019/05/16/von/</id>
    <published>2019-05-16T03:07:05.000Z</published>
    <updated>2019-05-16T10:34:05.089Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;v-on是事件绑定，他的缩写是&lt;code&gt;@&lt;/code&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>vhtml</title>
    <link href="snowFlakeXue.github.io/2019/05/16/vhtml/"/>
    <id>snowFlakeXue.github.io/2019/05/16/vhtml/</id>
    <published>2019-05-16T02:44:37.000Z</published>
    <updated>2019-05-16T10:33:17.152Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;注意这种方法在你无法保证绝对安全时不要使用，否则会造成SSR攻击&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vtext</title>
    <link href="snowFlakeXue.github.io/2019/05/16/vtext/"/>
    <id>snowFlakeXue.github.io/2019/05/16/vtext/</id>
    <published>2019-05-16T02:38:46.000Z</published>
    <updated>2019-05-16T11:17:32.681Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这种写法的作用和花括号法一样，但在网速慢加载不出来时不会输出花括号降低用户体验&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>vfor</title>
    <link href="snowFlakeXue.github.io/2019/05/16/vfor/"/>
    <id>snowFlakeXue.github.io/2019/05/16/vfor/</id>
    <published>2019-05-16T01:48:16.000Z</published>
    <updated>2019-05-16T10:32:57.572Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;一个简单排序,注意这里面sort方法容易掉的坑，不仅是vue所有的js都有这个bug，因此这种解决方式很常用&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="Vue" scheme="snowFlakeXue.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>指针</title>
    <link href="snowFlakeXue.github.io/2019/05/12/%E6%8C%87%E9%92%88/"/>
    <id>snowFlakeXue.github.io/2019/05/12/指针/</id>
    <published>2019-05-11T23:07:08.000Z</published>
    <updated>2019-05-16T10:37:30.349Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ol&gt;
&lt;li&gt;什么是指针：指针是储存地址的变量，他也有自己的地址，他通过自己储存的地址指向内存单元&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/2019/05/12/指针/1.jpg&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt;
&lt;ol
        
      
    
    </summary>
    
      <category term="C++" scheme="snowFlakeXue.github.io/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>BOM</title>
    <link href="snowFlakeXue.github.io/2019/05/09/BOM/"/>
    <id>snowFlakeXue.github.io/2019/05/09/BOM/</id>
    <published>2019-05-09T05:39:31.000Z</published>
    <updated>2019-05-11T00:45:38.602Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;BOM-浏览器对象模型，是实现与浏览器交流的&quot;&gt;&lt;a href=&quot;#BOM-浏览器对象模型，是实现与浏览器交流的&quot; class=&quot;headerlink&quot; title=&quot;BOM:浏览器对象模型，是实现与浏览器交流的&quot;&gt;&lt;/a&gt;BOM:浏览器对象模型，是实现与浏览器交流的&lt;/h2&gt;&lt;h2 id=&quot;window&quot;&gt;&lt;a href=&quot;#window&quot; class=&quot;headerlink&quot; title=&quot;window&quot;&gt;&lt;/a&gt;&lt;font color=&quot;red&quot;&gt;window&lt;/font&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;window.document（可省略window）(document就是表示这个文档，我理解成跟this差不多)&lt;/li&gt;
&lt;li&gt;window.innerHeight（浏览器内部高度，除去菜单栏，工具栏啥的）window.innerWidth（浏览器内部宽度）(Internet Explorer、Chrome、Firefox、Opera 以及 Safari支持)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;document.body.clientHeight/document.body.clientWidth(Internet Explorer 8、7、6、5支持)&lt;/p&gt;
&lt;p&gt;window.outerHeight（浏览器完整高度)window.outerWidth(浏览器完整宽度)&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javascript学习" scheme="snowFlakeXue.github.io/categories/javascript%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML_DOM</title>
    <link href="snowFlakeXue.github.io/2019/05/08/HTML-DOM/"/>
    <id>snowFlakeXue.github.io/2019/05/08/HTML-DOM/</id>
    <published>2019-05-08T02:51:59.000Z</published>
    <updated>2019-05-11T00:48:19.290Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是DOM：DOM是文档对象模型，他分xhtml-html-核心dom三种，所以html-dom就是可以对html文本中任何元素进行修改删除等操作&quot;&gt;&lt;a href=&quot;#什么是DOM：DOM是文档对象模型，他分xhtml-html-核心dom三种，所以html-dom就是可以对html文本中任何元素进行修改删除等操作&quot; class=&quot;headerlink&quot; title=&quot;什么是DOM：DOM是文档对象模型，他分xhtml,html,核心dom三种，所以html dom就是可以对html文本中任何元素进行修改删除等操作&quot;&gt;&lt;/a&gt;什么是DOM：DOM是文档对象模型，他分xhtml,html,核心dom三种，所以html dom就是可以对html文本中任何元素进行修改删除等操作&lt;/h2&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="javascript学习" scheme="snowFlakeXue.github.io/categories/javascript%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="snowFlakeXue.github.io/2019/05/07/%E5%87%BD%E6%95%B0/"/>
    <id>snowFlakeXue.github.io/2019/05/07/函数/</id>
    <published>2019-05-07T05:52:38.000Z</published>
    <updated>2019-05-16T10:36:49.694Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在js中函数也是对象，因此可以把它赋给一个变量，一个数组元素，甚至作为参数传给另一个函数调用&quot;&gt;&lt;a href=&quot;#在js中函数也是对象，因此可以把它赋给一个变量，一个数组元素，甚至作为参数传给另一个函数调用&quot; class=&quot;headerlink&quot; title=&quot;在js中函数也是对象，因此可以把它赋给一个变量，一个数组元素，甚至作为参数传给另一个函数调用&quot;&gt;&lt;/a&gt;在js中函数也是对象，因此可以把它赋给一个变量，一个数组元素，甚至作为参数传给另一个函数调用&lt;/h2&gt;&lt;h2 id=&quot;函数的定义&quot;&gt;&lt;a href=&quot;#函数的定义&quot; class=&quot;headerlink&quot; title=&quot;函数的定义&quot;&gt;&lt;/a&gt;&lt;font color=&quot;red&quot;&gt;函数的定义&lt;/font&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;声明式的静态方式(所有浏览器都支持）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;function 函数名(形参列表){函数体}//注意没有var否则报错,且function必须小写&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;①这种方式最常用，他只需定义一次，在程序的完整过程中，他一直被存在内存中，只在页面打开时解析一次，不论是什么调用它，返回的都是函数体处理完的结果&lt;/p&gt;
&lt;p&gt;②要设定返回值，他可以有0个到多个return,一般多个return 都用在需要判断条件时，即满足这个条件就不往下执行函数体内容&lt;/p&gt;
&lt;p&gt;③参数方面注意传参形式，一种是传值，一种是传地址，简单点说就是传值不改变实参，传地址改变实参&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javascript学习" scheme="snowFlakeXue.github.io/categories/javascript%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>day3</title>
    <link href="snowFlakeXue.github.io/2019/05/06/day3/"/>
    <id>snowFlakeXue.github.io/2019/05/06/day3/</id>
    <published>2019-05-06T15:12:39.000Z</published>
    <updated>2019-05-06T15:20:26.915Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;1.为什么程序底层要用二进制数：因为cpu和内存其实是IC的一种,而IC它两端有引角，引角只能输入5或0伏电压，这与二进制只有0和1对应，因此，每个引脚对应二进制的一位&lt;/p&gt;
&lt;ol
        
      
    
    </summary>
    
      <category term="睡前小读" scheme="snowFlakeXue.github.io/categories/%E7%9D%A1%E5%89%8D%E5%B0%8F%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>js对象</title>
    <link href="snowFlakeXue.github.io/2019/05/06/js%E5%AF%B9%E8%B1%A1/"/>
    <id>snowFlakeXue.github.io/2019/05/06/js对象/</id>
    <published>2019-05-06T01:57:10.000Z</published>
    <updated>2019-05-16T10:39:46.640Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;四种对象&quot;&gt;&lt;a href=&quot;#四种对象&quot; class=&quot;headerlink&quot; title=&quot;四种对象&quot;&gt;&lt;/a&gt;&lt;font color=&quot;red&quot;&gt;四种对象&lt;/font&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;javascript内置对象&lt;/li&gt;
&lt;li&gt;浏览器对象模型中的对象(BOM)&lt;/li&gt;
&lt;li&gt;文档对象模型中的对象&lt;/li&gt;
&lt;li&gt;用户自定义的对象&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="javascript学习" scheme="snowFlakeXue.github.io/categories/javascript%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>day2</title>
    <link href="snowFlakeXue.github.io/2019/05/05/day2/"/>
    <id>snowFlakeXue.github.io/2019/05/05/day2/</id>
    <published>2019-05-05T14:52:26.000Z</published>
    <updated>2019-05-06T03:09:37.223Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;程序运行时，程序计数器指向一个地址值，然后顺序结构的话，每进行一条指令，程序计数器上的值加一&lt;/li&gt;
&lt;li&gt;其实cpu处理程序很有意思，像是比较累加寄存器和通用寄存器中的值，他实际上会进行减法运算，通过正负零来判断谁大谁小&lt;/li&gt;
&lt;li&gt;运算结果存放在标志寄存器，无论结果是什么都会存放进去，同时标志寄存器还负责存放溢出和奇偶判断&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="睡前小读" scheme="snowFlakeXue.github.io/categories/%E7%9D%A1%E5%89%8D%E5%B0%8F%E8%AF%BB/"/>
    
    
  </entry>
  
</feed>
